from math import floor, ceil
from portion import closed
class algorytm:
    def divide_in(self, int1, int2):
        return int1 & int2
    def divide_half_out(self, int1, int2):
        up, low = (int1.upper, int2.upper), (int1.lower, int2.lower)
        return closed(min(low), max(low)), closed(min(up), max(up))
    def divide_out(self, int1, int2):
        return int1 - (int1 & int2), int1 | int2 ,int2 - (int1 & int2)
    def is_in(self, interval1, interval2):
        return True if interval1 & interval2 else False
    def is_equal(self, interval1, interval2):
        return True if interval1==interval2 else False
    def is_out(self, interval1, interval2):
        return True if ~(interval1 & interval2) else False

algorytmTest = algorytm()
interval1, interval2 =  closed(int(input()),int(input())), closed(int(input()),int(input()))
print('\nDivide interval: ', algorytmTest.divide_half_out(interval1, interval2) ,'\nDivide 2d-2d: ', algorytmTest.divide_out(interval1, interval2) )
